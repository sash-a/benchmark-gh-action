name: Autobench

on:
  issue_comment:
    types: [created]

jobs:
  autobench:
    if: |
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/autobench') &&
      (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'COLLABORATOR')

    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - name: Get PR branch name
        id: get_branch
        uses: xt0rted/pull-request-comment-branch@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get comment body
        id: get_comment
        run: echo "comment_body=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT

      - name: Prepare Autobench Variables
        id: prep_vars
        run: |
          echo "branch=${{ steps.get_branch.outputs.head_ref }}" >> $GITHUB_OUTPUT
          echo "args=$(echo "${{ github.event.comment.body }}" | sed -e 's/^\/autobench//' -e 's/^[ \t]*//' -e 's/[ \t]*$//')" >> $GITHUB_OUTPUT

      - name: Notify started benchmark
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Autobench Started benchmark:\n - **Branch:** `${{ steps.prep_vars.outputs.branch }}` \n **Issue number:* `${{ context.issue.number }}` \n - **Arguments:** `${{ steps.prep_vars.outputs.args }}`'
            })

      - name: Trigger benchmark
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.BENCHMARK_API_KEY }}" \
            -d '{
              "branch": "${{ steps.prep_vars.outputs.branch }}",
              "args": "${{ steps.prep_vars.outputs.args }}",
              "issue_number": "${{ github.event.issue.number }}"
            }' \
            ${{ secrets.BENCHMARK_ENDPOINT }}
