name: Autobench

on:
  issue_comment:
    types: [created]

jobs:
  autobench:
    if: |
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/autobench') &&
      (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'COLLABORATOR')

    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # TODO: going to need to install deps also

      - name: Get PR branch name
        id: get_branch
        uses: xt0rted/pull-request-comment-branch@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get comment body
        id: get_comment
        run: echo "comment_body=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT

      - name: Prepare Autobench Variables
        id: prep_vars
        run: |
          echo "branch=${{ steps.get_branch.outputs.head_ref }}" >> $GITHUB_OUTPUT
          echo "args=$(echo "${{ github.event.comment.body }}" | sed -e 's/^\/autobench//' -e 's/^[ \t]*//' -e 's/[ \t]*$//')" >> $GITHUB_OUTPUT
          DD=$(date +'%d')
          MM=$(date +'%m')
          RAND_INT=$(shuf -i 1000-9999 -n 1)
          echo "neptune_id=${{ github.event.issue.number }}-${DD}-${MM}-${RAND_INT}" >> $GITHUB_OUTPUT

      - name: Launch benchmark
        run: python test.py ${{ steps.prep_vars.outputs.args }} --branches develop ${{ steps.prep_vars.outputs.branch }} --neptune_id ${{ steps.prep_vars.outputs.neptune_id }}

      - name: Notify started benchmark
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const neptuneId = `${{ steps.prep_vars.outputs.neptune_id }}`;
            const neptuneLink = `https://app.neptune.ai/o/InstaDeep/org/mava-benchmark/runs/table?query=(%60sys%2Fid%60%3Astring%20CONTAINS%20%22${neptuneId}%22)&lbViewUnpacked=true`;

            const body = `Autobench Started benchmark:
            - **Neptune Link:** ${neptuneLink}
            - **Branch:** ${{ steps.prep_vars.outputs.branch }}
            - **Issue number:** ${context.issue.number}
            - **Arguments:** ${{ steps.prep_vars.outputs.args }}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
